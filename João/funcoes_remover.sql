CREATE OR REPLACE FUNCTION REMOVER_CLIENTE(
    C_NOME_TABLE VARCHAR,
    C_COD_CLI INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM %I WHERE COD_CLI = $1', C_NOME_TABLE)
    USING C_COD_CLI;
END;
$$ LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION REMOVER_PRODUTO(
    P_NOME_TABLE VARCHAR,
    P_COD_PROD INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM %I WHERE COD_PROD = $1', P_NOME_TABLE)
    USING P_COD_PROD;
END;
$$ LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION REMOVER_FUNCIONARIO(
    F_NOME_TABLE VARCHAR,
    F_COD_FUNC INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM %I WHERE COD_FUNC = $1', FUNC_NOME_TABLE)
    USING F_COD_FUNC;
END;
$$ LANGUAGE plpgsql;


create or replace function desativar_funcionario (
	f_nome_table varchar,
	f_cod_func int
) returns void as $$ 
begin 
	update funcionario set status_func = 'INATIVO' where cod_func = f_cod_func;
end;
$$ language plpgsql;

CREATE OR REPLACE FUNCTION REMOVER_LOJA(
    L_NOME_TABLE VARCHAR,
    L_COD_LOJA INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM %I WHERE COD_LOJA = $1', L_NOME_TABLE)
    USING L_COD_LOJA;
END;
$$ LANGUAGE plpgsql;

create or replace function desativar_loja (
	l_nome_table varchar,
	l_cod_loja int
) returns void as $$
begin
	update floricultura set status_loja = 'DESATIVADA' where cod_loja = l_cod_loja;
end;
$$ language plpgsql;

CREATE OR REPLACE FUNCTION REMOVER_FORNECEDOR(
    FORN_NOME_TABLE VARCHAR,
    FORN_COD_FORNECEDOR INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM %I WHERE COD_FORNECEDOR = $1', FORN_NOME_TABLE)
    USING FORN_COD_FORNECEDOR;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION REMOVER_ESTOQUE(
    E_NOME_TABLE VARCHAR,
    E_COD_ESTOQUE INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM %I WHERE COD_ESTOQUE = $1', E_NOME_TABLE)
    USING E_COD_ESTOQUE;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION REMOVER_VENDA(
    V_NOME_TABLE VARCHAR,
    V_COD_VENDA INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM %I WHERE COD_VENDA = $1', V_NOME_TABLE)
    USING V_COD_VENDA;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION REMOVER_COMPRA(
    C_NOME_TABLE VARCHAR,
    C_COD_COMPRA INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM %I WHERE COD_COMPRA = $1', C_NOME_TABLE)
    USING C_COD_COMPRA;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION REMOVER_ITEM_VENDA(
    IV_COD_ITEM_VENDA INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM ITEM_VENDA WHERE COD_ITEM_VENDA = $1')
    USING IV_COD_ITEM_VENDA;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION REMOVER_ITEM_COMPRA(
    IC_COD_ITEM_COMPRA INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM ITEM_COMPRA WHERE COD_ITEM_COMPRA = $1')
    USING IC_COD_ITEM_COMPRA;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION REMOVER_REGISTRO(
    P_NOME_TABLE VARCHAR,
    P_NOME_COLUNA_CODIGO VARCHAR,
    P_VALOR_CODIGO INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('DELETE FROM %I WHERE %I = $1', P_NOME_TABLE, P_NOME_COLUNA_CODIGO)
    USING P_VALOR_CODIGO;
END;
$$ LANGUAGE plpgsql;


SELECT * FROM FLORICULTURA

SELECT REMOVER_REGISTRO('produto', 'cod_prod', 10);
SELECT REMOVER_REGISTRO('cliente', 'cod_cli', 5);
SELECT REMOVER_REGISTRO('floricultura', 'cod_loja', 3);
SELECT REMOVER_REGISTRO('funcionario', 'cod_func', 7);
SELECT REMOVER_REGISTRO('fornecedor', 'cod_fornecedor', 12);
