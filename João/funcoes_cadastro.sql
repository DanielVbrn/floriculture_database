CREATE OR REPLACE FUNCTION CADASTRAR_PRODUTO(
    P_NOME_TABLE VARCHAR,
    P_NOME_PROD VARCHAR(30),
    P_VALOR_PROD NUMERIC(10, 2)
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('INSERT INTO %I (NOME_PROD, VALOR_PROD) VALUES ($1, $2)', P_NOME_TABLE)
    USING  P_NOME_PROD, P_VALOR_PROD;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CADASTRAR_CLIENTE(
    C_NOME_TABLE VARCHAR,
    CLI_NOME_CLI VARCHAR(50),
    CLI_DATA_NASC DATE,
    CLI_TELEFONE VARCHAR(30)
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('INSERT INTO %I (NOME_CLI, DATA_NASC, TELEFONE) VALUES ($1, $2, $3)', C_NOME_TABLE)
    USING CLI_NOME_CLI, CLI_DATA_NASC, CLI_TELEFONE;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CADASTRAR_LOJA(
    L_NOME_LOJA VARCHAR(30),
    L_ENDERECO_LOJA VARCHAR(50)
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('INSERT INTO FLORICULTURA (NOME_LOJA, ENDERECO_LOJA) VALUES ($1, $2)')
    USING L_NOME_LOJA, L_ENDERECO_LOJA;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CADASTRAR_FUNCIONARIO(
    FUNC_NOME_TABLE VARCHAR,
    F_NOME_FUNC VARCHAR(50),
	F_SALARIO_BASE NUMERIC(10,2),
	F_COMISSAO NUMERIC(4,2),
    F_COD_LOJA INT,
    F_TELEFONE VARCHAR(30),
    F_STATUS_FUNC VARCHAR
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('INSERT INTO %I (NOME_FUNC, COD_LOJA, TELEFONE, STATUS_FUNC) VALUES ($1, $2, $3, $4)', FUNC_NOME_TABLE)
    USING F_NOME_FUNC, F_COD_LOJA, F_TELEFONE, F_STATUS_FUNC;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CADASTRAR_FORNECEDOR(
    FORN_NOME_TABLE VARCHAR,
    FORN_NOME_FORNECEDOR VARCHAR(30),
    FORN_CONTATO_FORNECEDOR VARCHAR(50)
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('INSERT INTO %I (NOME_FORNECEDOR, CONTATO_FORNECEDOR) VALUES ($1, $2)', FORN_NOME_TABLE)
    USING FORN_NOME_FORNECEDOR, FORN_CONTATO_FORNECEDOR;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CADASTRAR_ESTOQUE(
    E_NOME_TABLE VARCHAR,
    E_QTD_ESTOQUE INT,
    E_COD_PROD INT,
    E_COD_LOJA INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('INSERT INTO ESTOQUE (QUANTIDADE_EST, COD_PROD, COD_LOJA) VALUES ($1, $2, $3)')
    USING E_QTD_ESTOQUE, E_COD_PROD, E_COD_LOJA;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CADASTRAR_VENDA(
    V_NOME_TABLE VARCHAR,
    V_COD_CLI INT,
    V_COD_FUNC INT,
    V_DATA_VENDA DATE
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('INSERT INTO %I (COD_CLI, COD_FUNC, DATA_VENDA) VALUES ($1, $2, $3)', V_NOME_TABLE)
    USING V_COD_CLI, V_COD_FUNC, V_DATA_VENDA;
END;
$$ LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION CADASTRAR_COMPRA(
    C_NOME_TABLE VARCHAR,
    C_COD_ESTOQUE INT,
    C_COD_FUNC INT,
    C_COD_FORNECEDOR INT,
    C_DATA_COMPRA DATE
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('INSERT INTO %I (COD_ESTOQUE, COD_FUNC, COD_FORNECEDOR, DATA_COMPRA) VALUES ($1, $2, $3, $4)', C_NOME_TABLE)
    USING  C_COD_ESTOQUE, C_COD_FUNC, C_COD_FORNECEDOR, C_DATA_COMPRA;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION cadastrar_item_venda(
    p_cod_venda INT,
    p_cod_estoque INT,
    p_qtd_itens_venda NUMERIC
)
RETURNS VOID AS $$
BEGIN
    -- Tenta inserir um novo item de venda
    INSERT INTO ITEM_VENDA (COD_VENDA, COD_ESTOQUE, QTD_ITENS_VENDA)
    VALUES (p_cod_venda, p_cod_estoque, p_qtd_itens_venda)
    ON CONFLICT (COD_VENDA, COD_ESTOQUE) 
    DO UPDATE 
    SET QTD_ITENS_VENDA = ITEM_VENDA.QTD_ITENS_VENDA + EXCLUDED.QTD_ITENS_VENDA;

    RAISE NOTICE 'Item adicionado ou atualizado na venda com sucesso!';
END;
$$ LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION CADASTRAR_ITEM_COMPRA(
    IC_COD_COMPRA INT,
    IC_COD_ESTOQUE INT,
    IC_QTD_ITENS_COMPRA INT
) RETURNS VOID AS $$
BEGIN
    EXECUTE format('INSERT INTO ITEM_COMPRA (COD_COMPRA, COD_ESTOQUE, QTD_ITENS_COMPRA) VALUES ($1, $2, $3)')
    USING IC_COD_ITEM_COMPRA, IC_COD_COMPRA, IC_COD_ESTOQUE, IC_QTD_ITENS_COMPRA;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CADASTRAR_TUDO(
    TABELA_NOME VARCHAR,
    PARAMETRO_1 VARCHAR DEFAULT NULL,
    PARAMETRO_2 VARCHAR DEFAULT NULL,
    PARAMETRO_3 VARCHAR DEFAULT NULL,
    PARAMETRO_4 VARCHAR DEFAULT NULL,
    PARAMETRO_5 VARCHAR DEFAULT NULL,
	PARAMETRO_6 VARCHAR DEFAULT NULL
) RETURNS VOID AS $$
BEGIN
    CASE TABELA_NOME
        WHEN 'produto' THEN
            IF PARAMETRO_1 IS NOT NULL AND PARAMETRO_2 IS NOT NULL THEN
                PERFORM CADASTRAR_PRODUTO(TABELA_NOME, PARAMETRO_1, CAST(PARAMETRO_2 AS NUMERIC(10,2)));
			END IF;

        WHEN 'cliente' THEN
            IF PARAMETRO_1 IS NOT NULL AND PARAMETRO_2 IS NOT NULL AND PARAMETRO_3 IS NOT NULL THEN
                PERFORM CADASTRAR_CLIENTE(TABELA_NOME, PARAMETRO_1, TO_DATE(PARAMETRO_2, 'DD-MM-YYY'), PARAMETRO_3);
            END IF;

        WHEN 'loja' THEN
            IF PARAMETRO_1 IS NOT NULL AND PARAMETRO_2 IS NOT NULL THEN
                PERFORM CADASTRAR_LOJA(PARAMETRO_1, PARAMETRO_2);
            END IF;

        WHEN 'funcionario' THEN
            IF PARAMETRO_6 IS NOT NULL AND PARAMETRO_1 IS NOT NULL AND PARAMETRO_2 IS NOT NULL AND PARAMETRO_3 IS NOT NULL AND PARAMETRO_4 IS NOT NULL AND PARAMETRO_5 IS NOT NULL THEN
                PERFORM CADASTRAR_FUNCIONARIO(TABELA_NOME, PARAMETRO_1, CAST(PARAMETRO_2 AS NUMERIC(10,2)), CAST(PARAMETRO_3 AS NUMERIC(4,2)), CAST(PARAMETRO_4 AS INTEGER), PARAMETRO_5, PARAMETRO_6);
            END IF;

        WHEN 'fornecedor' THEN
            IF PARAMETRO_1 IS NOT NULL AND PARAMETRO_2 IS NOT NULL THEN
                PERFORM CADASTRAR_FORNECEDOR(TABELA_NOME, PARAMETRO_1, PARAMETRO_2);
            END IF;

        WHEN 'estoque' THEN
            IF PARAMETRO_1 IS NOT NULL AND PARAMETRO_2 IS NOT NULL AND PARAMETRO_3 IS NOT NULL THEN
                PERFORM CADASTRAR_ESTOQUE(TABELA_NOME, CAST(PARAMETRO_1 AS INTEGER), CAST(PARAMETRO_2 AS INTEGER), CAST(PARAMETRO_3 AS INTEGER));
            END IF;

        WHEN 'venda' THEN
            IF PARAMETRO_1 IS NOT NULL AND PARAMETRO_2 IS NOT NULL AND PARAMETRO_3 IS NOT NULL THEN
                PERFORM CADASTRAR_VENDA(TABELA_NOME, CAST(PARAMETRO_1 AS INTEGER), CAST(PARAMETRO_2 AS INTEGER), TO_DATE(PARAMETRO_3, 'DD-MM-YYY'));
            END IF;

        WHEN 'compra' THEN
            IF PARAMETRO_1 IS NOT NULL AND PARAMETRO_2 IS NOT NULL AND PARAMETRO_3 IS NOT NULL AND PARAMETRO_4 IS NOT NULL THEN
                PERFORM CADASTRAR_COMPRA(TABELA_NOME, CAST(PARAMETRO_1 AS INTEGER), CAST(PARAMETRO_2 AS INTEGER), CAST(PARAMETRO_3 AS INTEGER), TO_DATE(PARAMETRO_4, 'DD-MM-YYY'));
            END IF;

        WHEN 'item_venda' THEN
            IF PARAMETRO_1 IS NOT NULL AND PARAMETRO_2 IS NOT NULL AND PARAMETRO_3 IS NOT NULL THEN
                PERFORM CADASTRAR_ITEM_VENDA(CAST(PARAMETRO_1 AS INTEGER), CAST(PARAMETRO_2 AS INTEGER), CAST(PARAMETRO_3 AS INTEGER));
            END IF;

        WHEN 'item_compra' THEN
            IF PARAMETRO_1 IS NOT NULL AND PARAMETRO_2 IS NOT NULL AND PARAMETRO_3 IS NOT NULL THEN
                PERFORM CADASTRAR_ITEM_COMPRA(CAST(PARAMETRO_1 AS INTEGER), CAST(PARAMETRO_2 AS INTEGER), CAST(PARAMETRO_3 AS INTEGER));
            END IF;
        ELSE
            RAISE EXCEPTION 'Tabela % não reconhecida.', TABELA_NOME;
    END CASE;
END;
$$ LANGUAGE plpgsql;

SELECT CADASTRAR_TUDO('loja', 'JARDINEIRO', 'RUA DOS IPS, 321');

SELECT CADASTRAR_TUDO("FUNCIONARIO", "JOAO", "1000.00", "1", "1")


SELECT CADASTRAR_PRODUTO('produto', 'rosa vermelha', 15.99);
SELECT CADASTRAR_PRODUTO('produto', 'lírio branco', 12.49);
SELECT CADASTRAR_PRODUTO('produto', 'orquídea', 25.00);


SELECT CADASTRAR_CLIENTE('cliente', 'Ana Souza', '1985-03-12', '1234-5678');
SELECT CADASTRAR_CLIENTE('cliente', 'Carlos Silva', '1990-07-22', '9876-5432');
SELECT CADASTRAR_CLIENTE('cliente', 'Juliana Costa', '1978-11-30', '5555-6666');

SELECT CADASTRAR_LOJA('loja', 'Floricultura Jardim das Flores', 'Rua das Palmeiras, 123', 'Ativa');
SELECT CADASTRAR_LOJA('loja', 'Floricultura do Encanto ', 'Avenida das Rosas, 456', 'Ativa');

SELECT CADASTRAR_FUNCIONARIO('funcionario', 1000.00, 1.1, 'Mariana Lima', 1, '1111-2222', 'Ativo');
SELECT CADASTRAR_FUNCIONARIO('funcionario', 2000.00, 2,2, 'Pedro Oliveira', 1, '3333-4444', 'inativo');

SELECT CADASTRAR_FORNECEDOR('fornecedor', 'Flor do Campo', 'contato@flordocampo.com');
SELECT CADASTRAR_FORNECEDOR('fornecedor', 'Verde e Vida', 'contato@verdevida.com');


SELECT CADASTRAR_VENDA('venda', 6, 2, '2024-09-17');
select cadastrar_item_venda(4, 1, 7)

select * from venda
select * from estoque
select * from produto
select * from floricultura
select cadastrar_estoque('estoque', 30, 4, 1)
SELECT cadastrar_estoque('estoque', 50, 5, 2);
SELECT cadastrar_estoque('estoque', 50, 6, 2);


-- codigo anterior
CREATE OR REPLACE FUNCTION CADASTRAR_TUDO(
    TABELA_NOME VARCHAR,
    P_NOME_PROD VARCHAR(30) DEFAULT NULL,
    P_VALOR_PROD NUMERIC(10, 2) DEFAULT NULL,
    CLI_NOME_CLI VARCHAR(50) DEFAULT NULL,
    CLI_DATA_NASC DATE DEFAULT NULL,
    CLI_TELEFONE VARCHAR(30) DEFAULT NULL,
    L_NOME_LOJA VARCHAR(30) DEFAULT NULL,
    L_ENDERECO_LOJA VARCHAR(50) DEFAULT NULL,
    L_STATUS_LOJA VARCHAR DEFAULT NULL,
    F_NOME_FUNC VARCHAR(50) DEFAULT NULL,
    F_COD_LOJA INT DEFAULT NULL,
    F_TELEFONE VARCHAR(30) DEFAULT NULL,
    F_STATUS_FUNC VARCHAR DEFAULT NULL,
    FORN_NOME_FORNECEDOR VARCHAR(30) DEFAULT NULL,
    FORN_CONTATO_FORNECEDOR VARCHAR(50) DEFAULT NULL,
    E_QTD_ESTOQUE INT DEFAULT NULL,
    E_COD_PROD INT DEFAULT NULL,
    E_COD_LOJA INT DEFAULT NULL,
    V_COD_CLI INT DEFAULT NULL,
    V_COD_FUNC INT DEFAULT NULL,
    V_DATA_VENDA DATE DEFAULT NULL,
    C_COD_ESTOQUE INT DEFAULT NULL,
    C_COD_FUNC INT DEFAULT NULL,
    C_COD_FORNECEDOR INT DEFAULT NULL,
    C_DATA_COMPRA DATE DEFAULT NULL,
    IV_COD_ITEM_VENDA INT DEFAULT NULL,
    IV_COD_ESTOQUE INT DEFAULT NULL,
    IV_QTD_ITENS_VENDA INT DEFAULT NULL,
    IC_COD_ITEM_COMPRA INT DEFAULT NULL,
    IC_COD_COMPRA INT DEFAULT NULL,
    IC_COD_ESTOQUE INT DEFAULT NULL,
    IC_QTD_ITENS_COMPRA INT DEFAULT NULL
) RETURNS VOID AS $$
BEGIN
    CASE TABELA_NOME
        WHEN 'produto' THEN
            IF P_NOME_PROD IS NOT NULL AND P_VALOR_PROD IS NOT NULL THEN
                PERFORM CADASTRAR_PRODUTO(TABELA_NOME, P_NOME_PROD, P_VALOR_PROD);
            END IF;

        WHEN 'cliente' THEN
            IF CLI_NOME_CLI IS NOT NULL AND CLI_DATA_NASC IS NOT NULL AND CLI_TELEFONE IS NOT NULL THEN
                PERFORM CADASTRAR_CLIENTE(TABELA_NOME, CLI_NOME_CLI, CLI_DATA_NASC, CLI_TELEFONE);
            END IF;

        WHEN 'loja' THEN
            IF L_NOME_LOJA IS NOT NULL AND L_ENDERECO_LOJA IS NOT NULL AND L_STATUS_LOJA IS NOT NULL THEN
                PERFORM CADASTRAR_LOJA(TABELA_NOME, L_NOME_LOJA, L_ENDERECO_LOJA, L_STATUS_LOJA);
            END IF;

        WHEN 'funcionario' THEN
            IF F_NOME_FUNC IS NOT NULL AND F_COD_LOJA IS NOT NULL AND F_TELEFONE IS NOT NULL AND F_STATUS_FUNC IS NOT NULL THEN
                PERFORM CADASTRAR_FUNCIONARIO(TABELA_NOME, F_NOME_FUNC, F_COD_LOJA, F_TELEFONE, F_STATUS_FUNC);
            END IF;

        WHEN 'fornecedor' THEN
            IF FORN_NOME_FORNECEDOR IS NOT NULL AND FORN_CONTATO_FORNECEDOR IS NOT NULL THEN
                PERFORM CADASTRAR_FORNECEDOR(TABELA_NOME, FORN_NOME_FORNECEDOR, FORN_CONTATO_FORNECEDOR);
            END IF;

        WHEN 'estoque' THEN
            IF E_QTD_ESTOQUE IS NOT NULL AND E_COD_PROD IS NOT NULL AND E_COD_LOJA IS NOT NULL THEN
                PERFORM CADASTRAR_ESTOQUE(TABELA_NOME, E_QTD_ESTOQUE, E_COD_PROD, E_COD_LOJA);
            END IF;

        WHEN 'venda' THEN
            IF V_COD_CLI IS NOT NULL AND V_COD_FUNC IS NOT NULL AND V_DATA_VENDA IS NOT NULL THEN
                PERFORM CADASTRAR_VENDA(TABELA_NOME, V_COD_CLI, V_COD_FUNC, V_DATA_VENDA);
            END IF;

        WHEN 'compra' THEN
            IF C_COD_ESTOQUE IS NOT NULL AND C_COD_FUNC IS NOT NULL AND C_COD_FORNECEDOR IS NOT NULL AND C_DATA_COMPRA IS NOT NULL THEN
                PERFORM CADASTRAR_COMPRA(TABELA_NOME, C_COD_ESTOQUE, C_COD_FUNC, C_COD_FORNECEDOR, C_DATA_COMPRA);
            END IF;

        WHEN 'item_venda' THEN
            IF IV_COD_ITEM_VENDA IS NOT NULL AND IV_COD_ESTOQUE IS NOT NULL AND IV_QTD_ITENS_VENDA IS NOT NULL THEN
                PERFORM CADASTRAR_ITEM_VENDA(IV_COD_ITEM_ VENDA, IV_COD_ESTOQUE, IV_QTD_ITENS_VENDA);
            END IF;

        WHEN 'item_compra' THEN
            IF IC_COD_ITEM_COMPRA IS NOT NULL AND IC_COD_COMPRA IS NOT NULL AND IC_COD_ESTOQUE IS NOT NULL AND IC_QTD_ITENS_COMPRA IS NOT NULL THEN
                PERFORM CADASTRAR_ITEM_COMPRA(IC_COD_ITEM_COMPRA, IC_COD_COMPRA, IC_COD_ESTOQUE, IC_QTD_ITENS_COMPRA);
            END IF;

        ELSE
            RAISE EXCEPTION 'Tabela % não reconhecida.', TABELA_NOME;
    END CASE;
END;
$$ LANGUAGE plpgsql;